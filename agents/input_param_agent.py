tool_dictionary = {'get_current_user_details': {'description': "Fetch member's profile, miles, identity.Tip: Call before other tools (i.e list_user_flights)",
  'inputSchema': {}},
 'get_expiring_miles': {'description': "Calculate member's expiring miles. Tip: Call after `get_current_user_details` to ensure member details are available.",
  'inputSchema': {}},
 'list_user_flights': {'description': "Fetch member's flights. Input: surname. Should be called after `get_current_user_details`. Tip: Call if the PNR has not yet been provided.",
  'inputSchema': {}},
 'search_flights': {'description': 'Search THY (Turkish Airlines) outbound flights. Based on information from user origin(s), destination(s), date(s), and passenger details to find available flights and their prices.Important: For round trips, ALWAYS call search_inbound_flights after selecting an outbound to get accurate total pricing and return options.',
  'inputSchema': {'originDestinations': {'description': "An array defining the flight segments. For a one-way trip, this will have one item. For a round trip, it will has two items (outbound and return). For multi-city, it can have more.- For a 'round' trip, this MUST be an array with exactly TWO items (outbound and return).",
    'enum': None},
   'passengers': {'description': 'An array specifying the number of passengers for each type (e.g., adults, children, infants).',
    'enum': None},
   'tripType': {'description': "Specifies the trip type. This choice STRICTLY determines the number of flight segments required in the 'originDestinations' array.\n      - 'one_way': REQUIRES exactly ONE flight segment.\n      - 'round': REQUIRES exactly TWO flight segments (outbound and return).\n      - 'multi': REQUIRES two or more flight segments. 'round' indicates you are starting a flow for `search_inbound_flights` tool",
    'enum': ['one_way', 'round', 'multi']},
   'fareFamily': {'description': 'No description', 'enum': None}}},
 'search_inbound_flights': {'description': 'Required step after selecting outbound flight. Provides return flight options with accurate combined pricing including all taxes and fees.Provide details of the chosen outbound flight, original trip details, and passenger information.',
  'inputSchema': {'originDestinations': {'description': 'No description',
    'enum': None},
   'passengers': {'description': 'No description', 'enum': None},
   'selectedOutbound': {'description': 'No description', 'enum': None},
   'inboundFlightId': {'description': 'inboundFlightId, usually 0.',
    'enum': None},
   'pageTicket': {'description': "Page ticket for the API request, usually '0' or '1'.",
    'enum': None},
   'duTaxBean': {'description': 'Tax bean information, if available from previous step.',
    'enum': None}}},
 'get_flight_status_by_number': {'description': 'Fetch real-time flight status by number',
  'inputSchema': {'flightNumberFull': {'description': 'The full flight number including airline code (e.g., TK815, LH1234)',
    'enum': None},
   'flightDate': {'description': 'The flight date in YYYY-MM-DD format',
    'enum': None},
   'flightTime': {'description': 'Optional flight time in HH:mm format (24-hour, e.g., 14:30)',
    'enum': None},
   'language': {'description': "Language code for results, e.g., 'TR' for Turkish, 'EN' for English",
    'enum': None}}},
 'get_flight_status_by_route': {'description': 'Fetch real-time flight status by route. Inputs: airports, date.',
  'inputSchema': {'fromAirport': {'description': 'The 3-letter IATA code for the departure airport (e.g., IST)',
    'enum': None},
   'toAirport': {'description': 'The 3-letter IATA code for the arrival airport (e.g., ESB)',
    'enum': None},
   'flightDate': {'description': 'The flight date in YYYY-MM-DD format (router will format to DD-MM-YYYY for API URL)',
    'enum': None},
   'language': {'description': "Language code for results, e.g., 'TR' for Turkish, 'EN' for English",
    'enum': None}}},
 'get_booking_details': {'description': 'Fetch THY flight booking details. Inputs: bookingReference (PNR or e-ticket number), surname. Tip: Call before other tools that require booking details. (provides flight codes, ticket numbers and baggage related info, checkin availability and more.)',
  'inputSchema': {'bookingReference': {'description': "The booking reference: either a 6-character PNR (alphanumeric) or 10-14 digit e-ticket number. Examples: 'S4CSWP' or '2352270968431'",
    'enum': None},
   'surname': {'description': "The passenger's surname (last name)",
    'enum': None},
   'language': {'description': "Language code for results, e.g., 'TR' for Turkish, 'EN' for English.",
    'enum': None}}},
 'get_booking_baggage_allowance': {'description': 'Fetch detailed booking baggage information. Tip: Call get_booking_details tool to retrieve the ticket number if not provided.',
  'inputSchema': {'bookingReference': {'description': "The booking reference: either a 6-character PNR (alphanumeric) or 10-14 digit e-ticket number. Examples: 'S4CSWP' or '2352270968431'",
    'enum': None},
   'surname': {'description': "The passenger's surname (last name)",
    'enum': None}}},
 'get_airline_promotions': {'description': 'Fetch airline promotions. Inputs: country, airports.',
  'inputSchema': {'countryCode': {'description': 'The 2-letter ISO country code to filter promotions (e.g., TR, DE).',
    'enum': None},
   'departureAirportCode': {'description': 'The 3-letter IATA code for the departure airport (e.g., IST).',
    'enum': None},
   'arrivalAirportCode': {'description': 'The 3-letter IATA code for the arrival airport (e.g., FRA) or empty string.',
    'enum': None},
   'visa': {'description': 'Whether to filter promotions that require a visa.',
    'enum': None},
   'type': {'description': 'The type of promotions to retrieve (1 for main, 2 for all).',
    'enum': ['1', '2']},
   'arrivalContinent': {'description': 'Continent name for the arrival continent (e.g. Asia, Europe).',
    'enum': None}}},
 'get_city_guide': {'description': 'Fetch a travel guide, including promotions for a specified arrival city considering departure city. Tip: What to do in the city, where to go, what to see, and more.',
  'inputSchema': {'cityCode': {'description': 'The IATA or city code for the arrival city (e.g., IST, LON, NYC)',
    'enum': None},
   'departureCityCode': {'description': 'Optional IATA or city code for the departure city (e.g., ANK, FRA)',
    'enum': None}}},
 'create_flight_booking_link': {'description': 'Constructs a booking deeplink for a specific Turkish Airlines flight option. Use for both one-way and round-trip selections from `search_flights` or `search_inbound_flights` tools. Tip: Call this tool after the user confirms their choice. Respond with the link like: `Here is your booking link: [LINK]`',
  'inputSchema': {'price': {'description': 'The total price of the selected flight itinerary.',
    'enum': None},
   'currency': {'description': 'The 3-letter currency code for the price (e.g., TRY, USD).',
    'enum': None},
   'isDomestic': {'description': "Set to 'true' if the flight is within a single country, otherwise 'false'.",
    'enum': None},
   'passengers': {'description': "Passenger string, e.g., 'A:1' for one adult or 'A:2,C:1' for two adults and one child. (A=Adult, C=Child, I=Infant).",
    'enum': None},
   'outboundCabinClass': {'description': 'The cabin class for the outbound flight.',
    'enum': ['ECONOMY', 'BUSINESS', 'COMFORT', 'FIRST']},
   'outboundStops': {'description': 'Number of stops for the outbound journey (0 for direct).',
    'enum': None},
   'outboundFlightNumbers': {'description': "The flight numbers for the outbound journey, comma-separated for connections (e.g., 'TK289' or 'TK2042,TK700').",
    'enum': None},
   'departureAirport': {'description': 'The 3-letter IATA code for the starting airport of the entire journey.',
    'enum': None},
   'destinationAirport': {'description': 'The 3-letter IATA code for the final destination airport of the entire journey.',
    'enum': None},
   'departureDate': {'description': 'The departure date and time of the outbound journey in DD-MM-YYYY HH:mm format.',
    'enum': None},
   'outboundFareBasisCodes': {'description': "The fare basis code for the outbound journey (e.g., 'PLTCLR', 'OLTCLO').",
    'enum': None},
   'outboundBrandCodes': {'description': "The brand code for the outbound journey's fare package from selected flight.",
    'enum': None},
   'returnFlightNumbers': {'description': 'The flight numbers for the return journey. REQUIRED for round-trip. Omit for one-way.',
    'enum': None},
   'returnDate': {'description': 'The departure date and time of the return journey. REQUIRED for round-trip. Omit for one-way.',
    'enum': None},
   'returnFareBasisCodes': {'description': "The fare basis code for the return journey (e.g., 'ALTCLR'). REQUIRED for round-trip. Omit for one-way.",
    'enum': None},
   'returnBrandCodes': {'description': "The brand code for the return journey's fare package (e.g., 'CL', 'LG'). REQUIRED for round-trip. Omit for one-way.",
    'enum': None},
   'returnCabinClass': {'description': 'The cabin class for the inbound flight.',
    'enum': ['ECONOMY', 'BUSINESS', 'COMFORT', 'FIRST']},
   'returnStops': {'description': 'Number of stops for the return journey (0 for direct). REQUIRED for round-trip.',
    'enum': None}}},
 'ping': {'description': 'Check current authentication status. Call when authentications issue occurs.',
  'inputSchema': {}},
 'logout': {'description': 'Logout member. Input: confirm.',
  'inputSchema': {'confirm': {'description': 'Confirmation that user wants to logout. Must be true to proceed.',
    'enum': None}}}}

def input_param_agent(selected_tool, tool_dictionary):
    input_param_dict = tool_dictionary[selected_tool]
    inputs = input_param_dict["inputSchema"].keys()
    input_dict = {}
    for key in inputs:
        input_dict[key] = None

    return input_dict
    

tid = input_param_agent("search_flights", tool_dictionary)
print(tid)

